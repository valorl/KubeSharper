{{~
    head = resources | array.first
    tail = resources | array.offset 1
~}}
using k8s;
using k8s.Models;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace KubeSharper.EventSources
{
    public partial class Listers
    {
        public Lister<T> GetNamespacedFor<T>(IKubernetes operations)
        {
            var t = typeof(T);
            if (t == typeof({{ head.type }})) return (Lister<T>)(object){{ head.type }}(operations);
{{~ for r in tail ~}}
            else if (t == typeof({{ r.type }})) return (Lister<T>)(object){{ r.type }}(operations);
{{~ end ~}}
            else throw new NotImplementedException();
        }

{{~ for r in resources ~}}

        public Lister<{{ r.type }}> {{ r.type }}(IKubernetes operations)
        {
            async Task<IList<{{ r.type }}>> ListerFunc(string @namespace)
            {
                var list = await operations.{{ r.lister }}(@namespace);
                return list.Items;
            }
            return new Lister<{{ r.type }}>(ListerFunc);
        }
{{~ end ~}}
    }
}
